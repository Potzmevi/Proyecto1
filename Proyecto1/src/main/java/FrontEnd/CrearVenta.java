/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BaseDeDatos.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author potz
 */
public class CrearVenta extends javax.swing.JFrame {

    public static String NITCLIENTE = "";
    public static DefaultTableModel model = new DefaultTableModel() {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    public LocalDate fecha = LocalDate.now();

    /**
     * Creates new form CrearVenta
     */
    public CrearVenta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Comprarbutton = new javax.swing.JButton();
        totallabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        nittxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        codigotxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        enviarbutton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        productotable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        clientetable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        carritotable = new javax.swing.JTable();
        cantidadtxt = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Venta");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(153, 153, 153));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cantidad.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, -1, 30));

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 30, 30));

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Seleccionar producto:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Crear Venta:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        Comprarbutton.setBackground(new java.awt.Color(153, 153, 153));
        Comprarbutton.setForeground(new java.awt.Color(51, 51, 51));
        Comprarbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ventas.png"))); // NOI18N
        Comprarbutton.setText("Comprar");
        Comprarbutton.setBorder(null);
        Comprarbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprarbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(Comprarbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 150, 50));

        totallabel.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        totallabel.setForeground(new java.awt.Color(51, 51, 51));
        jPanel1.add(totallabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 160, 20));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Carrito:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, -1));

        jLabel13.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Codigo.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 30, 30));

        nittxt.setBackground(new java.awt.Color(153, 153, 153));
        nittxt.setForeground(new java.awt.Color(102, 102, 102));
        nittxt.setBorder(null);
        nittxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nittxtKeyTyped(evt);
            }
        });
        jPanel1.add(nittxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 230, 30));

        jLabel14.setBackground(new java.awt.Color(153, 153, 153));
        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setOpaque(true);
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 30, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Codigo.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 30, 30));

        codigotxt.setBackground(new java.awt.Color(153, 153, 153));
        codigotxt.setForeground(new java.awt.Color(102, 102, 102));
        codigotxt.setBorder(null);
        codigotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigotxtActionPerformed(evt);
            }
        });
        jPanel1.add(codigotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 230, 30));

        jLabel10.setBackground(new java.awt.Color(153, 153, 153));
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 30, 30));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Cantidad:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        enviarbutton.setBackground(new java.awt.Color(153, 153, 153));
        enviarbutton.setForeground(new java.awt.Color(51, 51, 51));
        enviarbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/carrito.png"))); // NOI18N
        enviarbutton.setText("Enviar al carrito");
        enviarbutton.setBorder(null);
        enviarbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(enviarbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 190, 50));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Cliente:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Precio:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, -1, -1));

        productotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productotable);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 260, 90));

        clientetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NIT", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(clientetable);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 260, 100));

        carritotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carritotable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 300, 140));

        cantidadtxt.setBackground(new java.awt.Color(153, 153, 153));
        cantidadtxt.setForeground(new java.awt.Color(102, 102, 102));
        cantidadtxt.setBorder(null);
        cantidadtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadtxtActionPerformed(evt);
            }
        });
        jPanel1.add(cantidadtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 230, 30));

        jRadioButton1.setText("Efectivo");
        jRadioButton1.setOpaque(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, -1, -1));

        jRadioButton2.setText("Credito");
        jRadioButton2.setOpaque(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondoVenta.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 510));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigotxtActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        llenarTabla(nittxt, "SELECT NIT, nombre, credito FROM CLIENTE ", true, clientetable, "NIT", "");
        llenarTabla(codigotxt, "SELECT codigo, nombre, precio, cantidad FROM PRODUCTO ", false, productotable, "codigo", "&& codigo_tienda='" + MenuEmpresa.codigoTiendaOrigen + "'");
        Keilstener();

        carritotable.setModel(model);
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Cantidad");

        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void nittxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nittxtKeyTyped


    }//GEN-LAST:event_nittxtKeyTyped

    private void enviarbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarbuttonActionPerformed
        int filacliente = clientetable.getSelectedRow();
        int filaselected = productotable.getSelectedRow();
        int cantidadint = Integer.parseInt(cantidadtxt.getText());
        if (filacliente >= 0) {
            NITCLIENTE = clientetable.getValueAt(filacliente, 0).toString();
        }
        if (NITCLIENTE == "") {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un cliente");
        } else {
            if (filaselected >= 0 && cantidadtxt.getText().length() != 0) {
                String cant = productotable.getValueAt(filaselected, 3).toString();
                if (Integer.parseInt(cant) >= cantidadint && Integer.parseInt(cant) > 0) {
                    JOptionPane.showMessageDialog(null, filaselected);

                    String[] datos = new String[4];
                    datos[0] = productotable.getValueAt(filaselected, 0).toString();
                    datos[1] = productotable.getValueAt(filaselected, 1).toString();
                    datos[2] = productotable.getValueAt(filaselected, 2).toString();
                    datos[3] = cantidadtxt.getText();
                    model.addRow(datos);
                    clientetable.setEnabled(false);
                    nittxt.setEnabled(false);
                    sumartotal();
                    int newcantidad = Integer.parseInt(cant) - cantidadint;
                    String codigoproducto = productotable.getValueAt(filaselected, 0).toString();
                    String query = ("UPDATE PRODUCTO SET cantidad = '" + newcantidad + "' WHERE codigo='" + codigoproducto + "'");
                    Conexion conexion = new Conexion();
                    conexion.Insert(query);
                    llenarTabla(codigotxt, "SELECT codigo, nombre, precio, cantidad FROM PRODUCTO ", false, productotable, "codigo", "&& codigo_tienda='" + MenuEmpresa.codigoTiendaOrigen + "'");
                    jRadioButton1.setEnabled(true);
                    jRadioButton2.setEnabled(true);

                } else if ((Integer.parseInt(cant) <= cantidadint) && Integer.parseInt(cant) == 0) {
                    JOptionPane.showMessageDialog(null, "Producto agotado");
                } else {
                    JOptionPane.showMessageDialog(null, "No hay la cantidad del producto solicitado en esta tienda");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor seleccione un producto e ingrese una cantidad");
            }

        }

    }//GEN-LAST:event_enviarbuttonActionPerformed

    private void cantidadtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadtxtActionPerformed

    private void ComprarbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprarbuttonActionPerformed
        int filacliente = clientetable.getSelectedRow();
        Double total = Double.parseDouble(totallabel.getText());
        String codigo_tienda = MenuEmpresa.codigoTiendaOrigen;

        String query = ("INSERT INTO FACTURA VALUES('" + 0 + "','" + total + "','" + fecha + "','" + codigo_tienda + "','" + NITCLIENTE + "')");
        Conexion conexion = new Conexion();
        int codigo_factura = conexion.InsertVenta(query);

        for (int i = 0; i < carritotable.getRowCount(); i++) {
            int cantidad = Integer.parseInt(carritotable.getValueAt(i, 3).toString());
            Double precio = Double.parseDouble(carritotable.getValueAt(i, 2).toString());
            String codigo_producto = carritotable.getValueAt(i, 0).toString();
            String query2 = ("INSERT INTO VENTA VALUES('" + 0 + "','" + cantidad + "','" + precio + "','" + codigo_producto + "','" + codigo_factura + "')");
            Conexion conexion2 = new Conexion();
            conexion2.Insert(query2);
        }

        Double getcredito = Double.parseDouble(clientetable.getValueAt(filacliente, 2).toString());
        Double totaldellabel = Double.parseDouble(totallabel.getText());
        Double cantidadfinal = getcredito - total;
        if (jRadioButton2.isSelected() == true) {
            if (getcredito >= totaldellabel) {
                query = ("UPDATE CLIENTE SET credito = '" + cantidadfinal + "' WHERE NIT='" + NITCLIENTE + "'");
                conexion.Insert(query);
                totallabel.setText("0");
            } else if (getcredito < totaldellabel) {
                cantidadfinal = 0.0;
                query = ("UPDATE CLIENTE SET credito = '" + cantidadfinal + "' WHERE NIT='" + NITCLIENTE + "'");
                conexion.Insert(query);
                totallabel.setText(String.valueOf(totaldellabel - getcredito));
            }
            llenarTabla(nittxt, "SELECT NIT, nombre, credito FROM CLIENTE ", true, clientetable, "NIT", "");
        }
        
        model = new DefaultTableModel();
         carritotable.setModel(model);
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Cantidad");
        
    }//GEN-LAST:event_ComprarbuttonActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton2.setSelected(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jRadioButton1.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    public void sumartotal() {
        double total = 0;
        double precio = 0;
        int rowscount = carritotable.getRowCount();
        if (carritotable.getRowCount() > 0) {
            for (int i = 0; i < rowscount; i++) {
                precio = Double.parseDouble(carritotable.getValueAt(i, 2).toString());
                precio *= Double.parseDouble(carritotable.getValueAt(i, 3).toString());
                total += precio;
            }
        }
        totallabel.setText(String.valueOf(total));

    }

    public void llenarTabla(JTextField filtro, String accion, boolean cliente, JTable tabla, String value, String tienda) {
        String campo = filtro.getText();
        String where = "";

        if (!"".equals(campo)) {
            where = "WHERE " + value + " LIKE '%" + campo + "%' " + tienda;
        }
        try {
            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tabla.setModel(model);
            String query = accion + where;
            Conexion conexion = new Conexion();
            ResultSet Result = conexion.ComboBox(query);
            ResultSetMetaData rsMd = Result.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            if (cliente == true) {
                model.addColumn("NIT");
                model.addColumn("Nombre");
                model.addColumn("Credito");
            } else {
                model.addColumn("Codigo");
                model.addColumn("Nombre");
                model.addColumn("Precio");
                model.addColumn("Cantidad");
            }
            while (Result.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = Result.getObject(i + 1);

                }
                model.addRow(filas);
            }
        } catch (SQLException e) {
            System.out.println(e.toString());
        }
    }

    public void Keilstener() {
        nittxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                llenarTabla(nittxt, "SELECT NIT, nombre FROM CLIENTE ", true, clientetable, "NIT", "");
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                llenarTabla(nittxt, "SELECT NIT, nombre FROM CLIENTE ", true, clientetable, "NIT", "");
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                llenarTabla(nittxt, "SELECT NIT, nombre FROM CLIENTE ", true, clientetable, "NIT", "");
            }
        });
        codigotxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent de) {
                llenarTabla(codigotxt, "SELECT codigo, nombre, precio FROM PRODUCTO ", false, productotable, "codigo", "&& codigo_tienda='" + MenuEmpresa.codigoTiendaOrigen + "'");
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                llenarTabla(codigotxt, "SELECT codigo, nombre, precio FROM PRODUCTO ", false, productotable, "codigo", "&& codigo_tienda='" + MenuEmpresa.codigoTiendaOrigen + "'");
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                llenarTabla(codigotxt, "SELECT codigo, nombre, precio FROM PRODUCTO ", false, productotable, "codigo", "&& codigo_tienda='" + MenuEmpresa.codigoTiendaOrigen + "'");
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comprarbutton;
    private javax.swing.JTextField cantidadtxt;
    private javax.swing.JTable carritotable;
    private javax.swing.JTable clientetable;
    private javax.swing.JTextField codigotxt;
    private javax.swing.JButton enviarbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField nittxt;
    private javax.swing.JTable productotable;
    private javax.swing.JLabel totallabel;
    // End of variables declaration//GEN-END:variables
}
