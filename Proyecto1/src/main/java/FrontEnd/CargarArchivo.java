/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.Main;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;

/**
 *
 * @author potz
 */
public class CargarArchivo extends javax.swing.JFrame {

    public static int contadorlinea = 1;

    /**
     * Creates new form CargarArchivo
     */
    public CargarArchivo() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.pack();
    }
    public static File h;
    public static String[] atributos = new String[25];
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cargar Archivo");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 21)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Seleccionar Archivo:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, -1, -1));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 210, 30));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setText("Buscar");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 90, 30));

        jButton2.setBackground(new java.awt.Color(153, 153, 153));
        jButton2.setText("Confirmar");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 90, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondoFactura.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 280));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int returnVal = file.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            jTextField1.setText(file.getSelectedFile().getName());
            h = file.getSelectedFile();
            jButton2.setEnabled(true);
        } else {
            jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
/**
 * Este metodo interpreta todos los datos del archivo del texto y los mete en un array
 * Llama al metodo para insertar los datos en la base de datos 
 * Usamos un buffered reader para leer los datos
 * @param archivo
 * @throws FileNotFoundException
 * @throws IOException 
 */
    public static void muestraContenido(File archivo) throws FileNotFoundException, IOException {
        String frase = "";
        String linea = "";
        int contador = 0;
        FileReader f = new FileReader(archivo);

        BufferedReader b = new BufferedReader(f);
        contadorlinea=1;
        while ((linea = b.readLine()) != null) {
            for (int i = 0; i < atributos.length; i++) {
                atributos[i] = "";
            }
            char[] arraychar = linea.toCharArray();
            for (int i = 0; i < arraychar.length; i++) {
                if (arraychar[i] == 44) {
                    atributos[contador] = frase;
                    frase = "";
                    contador++;
                } else {
                    frase = frase + String.valueOf(arraychar[i]);
                }
            }
            atributos[contador] = frase;
            frase = "";

            contador = 0;
            InsertarDatos();
            contadorlinea++;
        }

    }
    /**
     * llamamos el metodo para leer el archivo
     * Insertamos los datos en la base
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            muestraContenido(h);

        } catch (Exception e) {
        }
        InsertarDatos();
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Metodo para insertar los datos en nuestra base
     * Usamos querys y comprobamos cada dato para meterlo donde es
     */
    public static void InsertarDatos() {
        if (atributos[0].equals("TIENDA")) {

            String query = ("INSERT INTO TIENDA VALUES('" + atributos[3] + "','" + atributos[1] + "','" + atributos[2] + "','" + atributos[4] + "','" + atributos[5] + "','" + atributos[6] + "','" + atributos[7] + "')");
            Main.conexion.Insert(query);
        } else if (atributos[0].equals("TIEMPO")) {
            String query = ("INSERT INTO TIEMPO_TIENDA VALUES('" + 0 + "','" + Integer.parseInt(atributos[3]) + "','" + atributos[2] + "','" + atributos[1] + "')");
            Main.conexion.Insert(query);
        } else if (atributos[0].equals("PRODUCTO")) {
            if (atributos[8] == "") {
                atributos[8] = "0";
            }
            String query = ("INSERT INTO PRODUCTO VALUES('" + atributos[3] + "','" + atributos[1] + "','" + atributos[2] + "','" + Integer.parseInt(atributos[4]) + "','" + Double.parseDouble(atributos[5]) + "','" + atributos[7] + "','" + Integer.parseInt(atributos[8]) + "','" + atributos[6] + "')");
            Main.conexion.Insert(query);
        } else if (atributos[0].equals("EMPLEADO")) {
            String query = ("INSERT INTO EMPLEADO VALUES('" + atributos[2] + "','" + atributos[1] + "','" + atributos[3] + "','" + atributos[5] + "','" + atributos[4] + "','" + atributos[6] + "','" + atributos[7] + "')");
            Main.conexion.Insert(query);
        } else if (atributos[0].equals("CLIENTE")) {
            String query = ("INSERT INTO CLIENTE VALUES('" + atributos[2] + "','" + atributos[1] + "','" + atributos[5] + "','" + atributos[3] + "','" + Double.parseDouble(atributos[4]) + "','" + atributos[6] + "','" + atributos[7] + "')");
            Main.conexion.Insert(query);
        } else if (atributos[0].equals("PEDIDO")) {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            String date = atributos[4];
            LocalDate fecha = LocalDate.parse(date, formatter);
            String query = ("INSERT INTO PEDIDO VALUES('" + 0 + "','" + fecha + "','" + Integer.parseInt(atributos[7]) + "','" + Double.parseDouble(atributos[8]) + "','" + Double.parseDouble(atributos[9]) + "','" + atributos[6] + "','" + atributos[5] + "','" + atributos[2] + "','" + atributos[3] + "')");
            Main.conexion.Insert(query);
        }
    }
    /**
     * Comprobamos si la base de datos esta vacia o no
     * Habilitamos los botones si esta vacia para seleccionar un archivo de texto
     * @param evt 
     */
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        String[] Nombres = {"TIENDA", "CLIENTE", "TIEMPO_TIENDA", "FACTURA", "EMPLEADO", "PRODUCTO", "VENTA", "PEDIDO", "RECIBO"};
        String Query = "";
        for (int i = 0; i < Nombres.length; i++) {
            Query = "SELECT * FROM " + Nombres[i];
            ResultSet Result = Main.conexion.ComboBox(Query);
            try {
                if (Result != null && Result.next()) {
                    jButton2.setEnabled(false);
                    jButton1.setEnabled(false);
                    break;
                } else {
                    jButton2.setEnabled(true);
                    jButton1.setEnabled(true);
                }

            } catch (Exception e) {
            }
        }


    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargarArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargarArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargarArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargarArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CargarArchivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
